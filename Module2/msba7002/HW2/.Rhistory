# ordinal logisitic regression
ordinal_model <- polr(Quality ~ ., data = data, Hess = TRUE)
summary(ordinal_model)
print(rownames(coef(multinom_model)))
multinom_good <- coef(multinom_model)[, "Good"]
library(ggplot2)
library(GGally)
library(corrplot)
library(caret)
library(rpart)
library(rpart.plot)
library(reshape2)
library(nnet)
library(MASS)
data <- read.table("winequality-bc.txt", header = TRUE, sep = ",")
data$Quality <- factor(data$Quality,
levels = c("Bad", "Just OK", "Good"),
ordered = TRUE)
data$color <- as.factor(data$color)
data <- data[, -c(which(names(data) %in% c("quality", "free.sulfur.dioxide", "Crossvalidation", "Hold.Test")))]
multinom_model <- multinom(Quality ~ ., data = data)
summary(multinom_model)
# ordinal logisitic regression
ordinal_model <- polr(Quality ~ ., data = data, Hess = TRUE)
summary(ordinal_model)
multinom_good <- coef(multinom_model)["Good"]
ordinal_good <- coef(ordinal_model)
multinom_good
ordinal_good
library(ggplot2)
library(GGally)
library(corrplot)
library(caret)
library(rpart)
library(rpart.plot)
library(reshape2)
library(nnet)
library(MASS)
data <- read.table("winequality-bc.txt", header = TRUE, sep = ",")
data$Quality <- factor(data$Quality,
levels = c("Bad", "Just OK", "Good"),
ordered = TRUE)
data$color <- as.factor(data$color)
data <- data[, -c(which(names(data) %in% c("quality", "free.sulfur.dioxide", "Crossvalidation", "Hold.Test")))]
multinom_model <- multinom(Quality ~ ., data = data)
summary(multinom_model)
# ordinal logisitic regression
ordinal_model <- polr(Quality ~ ., data = data, Hess = TRUE)
summary(ordinal_model)
multinom_good <- coef(multinom_model)["Good",]
ordinal_good <- coef(ordinal_model)
multinom_good
ordinal_good
library(ggplot2)
library(GGally)
library(corrplot)
library(caret)
library(rpart)
library(rpart.plot)
library(reshape2)
library(nnet)
library(MASS)
data <- read.table("winequality-bc.txt", header = TRUE, sep = ",")
data$Quality <- factor(data$Quality,
levels = c("Bad", "Just OK", "Good"),
ordered = TRUE)
data$color <- as.factor(data$color)
data <- data[, -c(which(names(data) %in% c("quality", "free.sulfur.dioxide", "Crossvalidation", "Hold.Test", "color")))]
multinom_model <- multinom(Quality ~ ., data = data)
summary(multinom_model)
# ordinal logisitic regression
ordinal_model <- polr(Quality ~ ., data = data, Hess = TRUE)
summary(ordinal_model)
multinom_good <- coef(multinom_model)["Good",]
ordinal_good <- coef(ordinal_model)
multinom_good
ordinal_good
library(ggplot2)
library(GGally)
library(corrplot)
library(caret)
library(rpart)
library(rpart.plot)
library(reshape2)
library(nnet)
library(MASS)
data <- read.table("winequality-bc.txt", header = TRUE, sep = ",")
data$Quality <- factor(data$Quality,
levels = c("Bad", "Just OK", "Good"),
ordered = TRUE)
data$color <- as.factor(data$color)
data <- data[, -c(which(names(data) %in% c("quality", "free.sulfur.dioxide", "Crossvalidation", "Hold.Test", "color", "density")))]
multinom_model <- multinom(Quality ~ ., data = data)
summary(multinom_model)
# ordinal logisitic regression
ordinal_model <- polr(Quality ~ ., data = data, Hess = TRUE)
summary(ordinal_model)
multinom_good <- coef(multinom_model)["Good",]
ordinal_good <- coef(ordinal_model)
multinom_good
ordinal_good
library(ggplot2)
library(GGally)
library(corrplot)
library(caret)
library(rpart)
library(rpart.plot)
library(reshape2)
library(nnet)
library(MASS)
data <- read.table("winequality-bc.txt", header = TRUE, sep = ",")
data$Quality <- factor(data$Quality,
levels = c("Bad", "Just OK", "Good"),
ordered = TRUE)
data$color <- as.factor(data$color)
data <- data[, -c(which(names(data) %in% c("quality", "free.sulfur.dioxide", "Crossvalidation", "Hold.Test", "color")))]
multinom_model <- multinom(Quality ~ ., data = data)
summary(multinom_model)
# ordinal logisitic regression
ordinal_model <- polr(Quality ~ ., data = data, Hess = TRUE)
summary(ordinal_model)
multinom_good <- coef(multinom_model)["Good",]
ordinal_good <- coef(ordinal_model)
multinom_good
ordinal_good
library(ggplot2)
library(GGally)
library(corrplot)
library(caret)
library(rpart)
library(rpart.plot)
library(reshape2)
library(nnet)
library(MASS)
data <- read.table("winequality-bc.txt", header = TRUE, sep = ",")
data$Quality <- factor(data$Quality,
levels = c("Bad", "Just OK", "Good"),
ordered = TRUE)
data$color <- as.factor(data$color)
data <- data[, -c(which(names(data) %in% c("quality", "free.sulfur.dioxide", "Crossvalidation", "Hold.Test", "color")))]
set.seed(123)
train_indices <- sample(1:nrow(data), size = 0.8 * nrow(data))
train_data <- data[train_indices, ]
test_data <- data[-train_indices, ]
multinom_model <- multinom(Quality ~ ., data = train_data)
summary(multinom_model)
# ordinal logisitic regression
ordinal_model <- polr(Quality ~ ., data = train_data, Hess = TRUE)
summary(ordinal_model)
multinom_good <- coef(multinom_model)["Good",]
ordinal_good <- coef(ordinal_model)
multinom_good
ordinal_good
library(ggplot2)
library(GGally)
library(corrplot)
library(caret)
library(rpart)
library(rpart.plot)
library(reshape2)
library(nnet)
library(MASS)
data <- read.table("winequality-bc.txt", header = TRUE, sep = ",")
data$Quality <- factor(data$Quality,
levels = c("Bad", "Just OK", "Good"),
ordered = TRUE)
data$color <- as.factor(data$color)
data <- data[, -c(which(names(data) %in% c("quality", "free.sulfur.dioxide", "Crossvalidation", "Hold.Test", "color")))]
set.seed(123)
train_indices <- sample(1:nrow(data), size = 0.8 * nrow(data))
train_data <- data[train_indices, ]
test_data <- data[-train_indices, ]
multinom_model <- multinom(Quality ~ ., data = train_data)
summary(multinom_model)
# ordinal logisitic regression
ordinal_model <- polr(Quality ~ ., data = train_data, Hess = TRUE)
summary(ordinal_model)
multinom_good <- coef(multinom_model)["Good",]
ordinal_good <- coef(ordinal_model)
multinom_good
ordinal_good
mlogit_pred <- predict(mlogit_model, newdata = test_data, type = "class")
library(ggplot2)
library(GGally)
library(corrplot)
library(caret)
library(rpart)
library(rpart.plot)
library(reshape2)
library(nnet)
library(MASS)
data <- read.table("winequality-bc.txt", header = TRUE, sep = ",")
data$Quality <- factor(data$Quality,
levels = c("Bad", "Just OK", "Good"),
ordered = TRUE)
data$color <- as.factor(data$color)
data <- data[, -c(which(names(data) %in% c("quality", "free.sulfur.dioxide", "Crossvalidation", "Hold.Test", "color")))]
set.seed(123)
train_indices <- sample(1:nrow(data), size = 0.8 * nrow(data))
train_data <- data[train_indices, ]
test_data <- data[-train_indices, ]
multinom_model <- multinom(Quality ~ ., data = train_data)
summary(multinom_model)
# ordinal logisitic regression
ordinal_model <- polr(Quality ~ ., data = train_data, Hess = TRUE)
summary(ordinal_model)
multinom_good <- coef(multinom_model)["Good",]
ordinal_good <- coef(ordinal_model)
multinom_good
ordinal_good
mlogit_pred <- predict(multinom_model, newdata = test_data, type = "class")
polr_pred <- predict(ordinal_model, newdata = test_data, type = "class")
same_pred_count <- sum(mlogit_pred == polr_pred)
total_count <- nrow(test_data)
diff_rate <- 1 - same_pred_count / total_count
diff_rate
#
library(ggplot2)
library(GGally)
library(corrplot)
library(caret)
library(rpart)
library(rpart.plot)
library(reshape2)
library(nnet)
library(MASS)
data <- read.table("winequality-bc.txt", header = TRUE, sep = ",")
data$Quality <- factor(data$Quality,
levels = c("Bad", "Just OK", "Good"),
ordered = TRUE)
data$color <- as.factor(data$color)
data <- data[, -c(which(names(data) %in% c("quality", "free.sulfur.dioxide", "Crossvalidation", "Hold.Test", "color")))]
set.seed(123)
train_indices <- sample(1:nrow(data), size = 0.8 * nrow(data))
train_data <- data[train_indices, ]
test_data <- data[-train_indices, ]
multinom_model <- multinom(Quality ~ ., data = train_data)
summary(multinom_model)
# ordinal logisitic regression
ordinal_model <- polr(Quality ~ ., data = train_data, Hess = TRUE)
summary(ordinal_model)
multinom_good <- coef(multinom_model)["Good",]
ordinal_good <- coef(ordinal_model)
multinom_good
ordinal_good
mlogit_pred <- predict(multinom_model, newdata = test_data, type = "class")
polr_pred <- predict(ordinal_model, newdata = test_data, type = "class")
same_pred_count <- sum(mlogit_pred == polr_pred)
total_count <- nrow(test_data)
diff_rate <- 1 - same_pred_count / total_count
diff_rate
mlogit_accuracy <- mean(mlogit_pred == test_data$response_variable)
polr_accuracy <- mean(polr_pred == test_data$response_variable)
cat("多项逻辑回归准确率：", mlogit_accuracy, "\n")
cat("顺序逻辑回归准确率：", polr_accuracy, "\n")
#
library(ggplot2)
library(GGally)
library(corrplot)
library(caret)
library(rpart)
library(rpart.plot)
library(reshape2)
library(nnet)
library(MASS)
data <- read.table("winequality-bc.txt", header = TRUE, sep = ",")
data$Quality <- factor(data$Quality,
levels = c("Bad", "Just OK", "Good"),
ordered = TRUE)
data$color <- as.factor(data$color)
data <- data[, -c(which(names(data) %in% c("quality", "free.sulfur.dioxide", "Crossvalidation", "Hold.Test", "color")))]
set.seed(123)
train_indices <- sample(1:nrow(data), size = 0.8 * nrow(data))
train_data <- data[train_indices, ]
test_data <- data[-train_indices, ]
multinom_model <- multinom(Quality ~ ., data = train_data)
summary(multinom_model)
# ordinal logisitic regression
ordinal_model <- polr(Quality ~ ., data = train_data, Hess = TRUE)
summary(ordinal_model)
multinom_good <- coef(multinom_model)["Good",]
ordinal_good <- coef(ordinal_model)
multinom_good
ordinal_good
mlogit_pred <- predict(multinom_model, newdata = test_data, type = "class")
polr_pred <- predict(ordinal_model, newdata = test_data, type = "class")
same_pred_count <- sum(mlogit_pred == polr_pred)
total_count <- nrow(test_data)
diff_rate <- 1 - same_pred_count / total_count
diff_rate
mlogit_accuracy <- mean(mlogit_pred == test_data$Quality)
library(ggplot2)
library(GGally)
library(corrplot)
library(caret)
library(rpart)
library(rpart.plot)
library(reshape2)
library(nnet)
library(MASS)
data <- read.table("winequality-bc.txt", header = TRUE, sep = ",")
data$Quality <- factor(data$Quality,
levels = c("Bad", "Just OK", "Good"),
ordered = TRUE)
data$color <- as.factor(data$color)
data <- data[, -c(which(names(data) %in% c("quality", "free.sulfur.dioxide", "Crossvalidation", "Hold.Test", "color")))]
set.seed(123)
train_indices <- sample(1:nrow(data), size = 0.8 * nrow(data))
train_data <- data[train_indices, ]
test_data <- data[-train_indices, ]
multinom_model <- multinom(Quality ~ ., data = train_data)
summary(multinom_model)
# ordinal logisitic regression
ordinal_model <- polr(Quality ~ ., data = train_data, Hess = TRUE)
summary(ordinal_model)
multinom_good <- coef(multinom_model)["Good",]
ordinal_good <- coef(ordinal_model)
multinom_good
ordinal_good
mlogit_pred <- as.factor(predict(multinom_model, newdata = test_data, type = "class"))
polr_pred <- as.factor(predict(ordinal_model, newdata = test_data, type = "class"))
same_pred_count <- sum(mlogit_pred == polr_pred)
total_count <- nrow(test_data)
diff_rate <- 1 - same_pred_count / total_count
diff_rate
mlogit_accuracy <- mean(mlogit_pred == test_data$Quality)
library(ggplot2)
library(GGally)
library(corrplot)
library(caret)
library(rpart)
library(rpart.plot)
library(reshape2)
library(nnet)
library(MASS)
data <- read.table("winequality-bc.txt", header = TRUE, sep = ",")
data$Quality <- factor(data$Quality,
levels = c("Bad", "Just OK", "Good"),
ordered = TRUE)
data$color <- as.factor(data$color)
data <- data[, -c(which(names(data) %in% c("quality", "free.sulfur.dioxide", "Crossvalidation", "Hold.Test", "color")))]
set.seed(123)
train_indices <- sample(1:nrow(data), size = 0.8 * nrow(data))
train_data <- data[train_indices, ]
test_data <- data[-train_indices, ]
multinom_model <- multinom(Quality ~ ., data = train_data)
summary(multinom_model)
# ordinal logisitic regression
ordinal_model <- polr(Quality ~ ., data = train_data, Hess = TRUE)
summary(ordinal_model)
multinom_good <- coef(multinom_model)["Good",]
ordinal_good <- coef(ordinal_model)
multinom_good
ordinal_good
mlogit_pred <- as.factor(predict(multinom_model, newdata = test_data, type = "class"))
polr_pred <- as.factor(predict(ordinal_model, newdata = test_data, type = "class"))
same_pred_count <- sum(mlogit_pred == polr_pred)
total_count <- nrow(test_data)
diff_rate <- 1 - same_pred_count / total_count
diff_rate
mlogit_accuracy <- sum(mlogit_pred == test_data$Quality)
library(ggplot2)
library(GGally)
library(corrplot)
library(caret)
library(rpart)
library(rpart.plot)
library(reshape2)
library(nnet)
library(MASS)
data <- read.table("winequality-bc.txt", header = TRUE, sep = ",")
data$Quality <- factor(data$Quality,
levels = c("Bad", "Just OK", "Good"),
ordered = TRUE)
data$color <- as.factor(data$color)
data <- data[, -c(which(names(data) %in% c("quality", "free.sulfur.dioxide", "Crossvalidation", "Hold.Test", "color")))]
set.seed(123)
train_indices <- sample(1:nrow(data), size = 0.8 * nrow(data))
train_data <- data[train_indices, ]
test_data <- data[-train_indices, ]
multinom_model <- multinom(Quality ~ ., data = train_data)
summary(multinom_model)
# ordinal logisitic regression
ordinal_model <- polr(Quality ~ ., data = train_data, Hess = TRUE)
summary(ordinal_model)
multinom_good <- coef(multinom_model)["Good",]
ordinal_good <- coef(ordinal_model)
multinom_good
ordinal_good
mlogit_pred <- as.factor(predict(multinom_model, newdata = test_data, type = "class"))
polr_pred <- as.factor(predict(ordinal_model, newdata = test_data, type = "class"))
same_pred_count <- sum(mlogit_pred == polr_pred)
total_count <- nrow(test_data)
diff_rate <- 1 - same_pred_count / total_count
diff_rate
test_data$Quality <- as.factor(test_data$Quality)
mlogit_accuracy <- sum(mlogit_pred == test_data$Quality)
library(ggplot2)
library(GGally)
library(corrplot)
library(caret)
library(rpart)
library(rpart.plot)
library(reshape2)
library(nnet)
library(MASS)
data <- read.table("winequality-bc.txt", header = TRUE, sep = ",")
data$Quality <- factor(data$Quality,
levels = c("Bad", "Just OK", "Good"),
ordered = TRUE)
data$color <- as.factor(data$color)
data <- data[, -c(which(names(data) %in% c("quality", "free.sulfur.dioxide", "Crossvalidation", "Hold.Test", "color")))]
set.seed(123)
train_indices <- sample(1:nrow(data), size = 0.8 * nrow(data))
train_data <- data[train_indices, ]
test_data <- data[-train_indices, ]
multinom_model <- multinom(Quality ~ ., data = train_data)
summary(multinom_model)
# ordinal logisitic regression
ordinal_model <- polr(Quality ~ ., data = train_data, Hess = TRUE)
summary(ordinal_model)
multinom_good <- coef(multinom_model)["Good",]
ordinal_good <- coef(ordinal_model)
multinom_good
ordinal_good
mlogit_pred <- as.factor(predict(multinom_model, newdata = test_data, type = "class"))
polr_pred <- as.factor(predict(ordinal_model, newdata = test_data, type = "class"))
same_pred_count <- sum(mlogit_pred == polr_pred)
total_count <- nrow(test_data)
diff_rate <- 1 - same_pred_count / total_count
diff_rate
test_data$Quality <- as.factor(test_data$Quality, ordered=FALSE)
library(ggplot2)
library(GGally)
library(corrplot)
library(caret)
library(rpart)
library(rpart.plot)
library(reshape2)
library(nnet)
library(MASS)
data <- read.table("winequality-bc.txt", header = TRUE, sep = ",")
data$Quality <- factor(data$Quality,
levels = c("Bad", "Just OK", "Good"),
ordered = TRUE)
data$color <- as.factor(data$color)
data <- data[, -c(which(names(data) %in% c("quality", "free.sulfur.dioxide", "Crossvalidation", "Hold.Test", "color")))]
set.seed(123)
train_indices <- sample(1:nrow(data), size = 0.8 * nrow(data))
train_data <- data[train_indices, ]
test_data <- data[-train_indices, ]
multinom_model <- multinom(Quality ~ ., data = train_data)
summary(multinom_model)
# ordinal logisitic regression
ordinal_model <- polr(Quality ~ ., data = train_data, Hess = TRUE)
summary(ordinal_model)
multinom_good <- coef(multinom_model)["Good",]
ordinal_good <- coef(ordinal_model)
multinom_good
ordinal_good
mlogit_pred <- as.factor(predict(multinom_model, newdata = test_data, type = "class"))
polr_pred <- as.factor(predict(ordinal_model, newdata = test_data, type = "class"))
same_pred_count <- sum(mlogit_pred == polr_pred)
total_count <- nrow(test_data)
diff_rate <- 1 - same_pred_count / total_count
diff_rate
test_data$Quality <- factor(test_data$Quality, ordered=FALSE)
mlogit_accuracy <- sum(mlogit_pred == test_data$Quality)
polr_accuracy <- sum(polr_pred == test_data$Quality)
cat("多项逻辑回归准确率：", mlogit_accuracy, "\n")
cat("顺序逻辑回归准确率：", polr_accuracy, "\n")
#
library(ggplot2)
library(GGally)
library(corrplot)
library(caret)
library(rpart)
library(rpart.plot)
library(reshape2)
library(nnet)
library(MASS)
data <- read.table("winequality-bc.txt", header = TRUE, sep = ",")
data$Quality <- factor(data$Quality,
levels = c("Bad", "Just OK", "Good"),
ordered = TRUE)
data$color <- as.factor(data$color)
data <- data[, -c(which(names(data) %in% c("quality", "free.sulfur.dioxide", "Crossvalidation", "Hold.Test", "color")))]
set.seed(123)
train_indices <- sample(1:nrow(data), size = 0.8 * nrow(data))
train_data <- data[train_indices, ]
test_data <- data[-train_indices, ]
multinom_model <- multinom(Quality ~ ., data = train_data)
summary(multinom_model)
# ordinal logisitic regression
ordinal_model <- polr(Quality ~ ., data = train_data, Hess = TRUE)
summary(ordinal_model)
multinom_good <- coef(multinom_model)["Good",]
ordinal_good <- coef(ordinal_model)
multinom_good
ordinal_good
mlogit_pred <- as.factor(predict(multinom_model, newdata = test_data, type = "class"))
polr_pred <- as.factor(predict(ordinal_model, newdata = test_data, type = "class"))
same_pred_count <- sum(mlogit_pred == polr_pred)
total_count <- nrow(test_data)
diff_rate <- 1 - same_pred_count / total_count
diff_rate
test_data$Quality <- factor(test_data$Quality, ordered=FALSE)
mlogit_accuracy <- mean(mlogit_pred == test_data$Quality)
polr_accuracy <- mean(polr_pred == test_data$Quality)
cat("多项逻辑回归准确率：", mlogit_accuracy, "\n")
cat("顺序逻辑回归准确率：", polr_accuracy, "\n")
#
